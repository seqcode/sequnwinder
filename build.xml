<?xml version="1.0"?>
<project name="sequnwinder">

  <property name="src.dir" location="src" />	
  <property name="lib.dir" location="lib" />
  <property name="build.dir" location="build" />
  <property name="build.classes.dir" location="${build.dir}/classes" />
  <property name="build.dist.dir" location="${build.dir}/dist" />
  <property name="build.unjar.dir" location="${build.dir}/unjar" />
  <property name="build.compiler" value="javac1.8"/>
  <property name="pwfiles.basepath"  value="/storage/group/sam77_collab/code/pwfiles"/>
  <property name="seqcode-core.classes.dir"  value="../seqcode-core/build/classes"/>
  <property name="seqcode-core.lib.dir"  value="../seqcode-core/lib"/>
  <property name="seqcode-core.unjar.dir"  value="../seqcode-core/build/unjar"/>
	
  <path id="compile.classpath">
    <pathelement location="${build.classes.dir}"/>
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
  	<pathelement location="${seqcode-core.classes.dir}"/>
  	  <fileset dir="${seqcode-core.lib.dir}">
  	    <include name="**/*.jar"/>
  	  </fileset>
  </path>	

  <!-- ======================================================================= -->
  <!-- Target: init                                                            -->
  <!-- Depends:                                                                -->
  <!-- Description: Perform any initialization required to run other targets   -->
  <!-- ======================================================================= -->
  <target name="init">
    <mkdir dir="${build.classes.dir}" />
    <mkdir dir="${build.dist.dir}" />
  </target>

  <!-- ======================================================================= -->
  <!-- Target: clean                                                           -->
  <!-- Depends: init                                                           -->
  <!-- Description: clean up files produced in the build                       -->
  <!-- ======================================================================= -->
  <target name="clean" depends="init" description="remove build output" >
    <delete dir="${build.dist.dir}" />
    <delete dir="${build.classes.dir}" />
  </target>

  <!-- ======================================================================= -->
  <!-- Target: compile                                                         -->
  <!-- Depends: init                                                           -->
  <!-- Description: Compile the source code                                    -->
  <!-- ======================================================================= -->
  <target name="compile" depends="init" description="Compile the code" >
    <javac srcdir="${src.dir}"
	   destdir="${build.classes.dir}"	
	   classpathref="compile.classpath"
	   debug="true"
	   debuglevel="lines,vars,source"
	   deprecation="yes"
	   compiler="modern"
       includeantruntime="false"
	   verbose="no">		  
      <include name="**/*.java"/>
    </javac>
  </target>


  <!-- ======================================================================= -->
  <!-- Target: buildfilecopy                                                   -->
  <!-- Depends: init                                                           -->
  <!-- Description: Copies all non-source files required by utils              -->
  <!--              from the src directory to the build directory              -->
  <!-- ======================================================================= -->
  <target name="buildfilecopy" depends="init" description="Copy non-src files to the build dir" >
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}">
	<include name="**/*.gif"/>
	<include name="**/*.html"/>
	<include name="**/*.jpg"/>
	<include name="**/*.xml"/>
	<include name="**/*.txt"/>
	<include name="**/*.dtd"/>
	<include name="**/*.bat"/>
	<include name="**/*.exe"/>
	<include name="**/*.ico"/>
    <include name="**/*.png"/>
	<include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <!-- ======================================================================= -->
  <!-- Target: build                                                           -->
  <!-- Depends: compile, buildfilecopy                                         -->
  <!-- Description: Compiles all the client source files and copies other      -->
  <!--              required files to the build directory to create a usable   -->
  <!--              version of the utils module                                -->
  <!-- ======================================================================= -->
  <target name="build" depends="compile, buildfilecopy"
          description="build and copy files" >
  </target>


  <target name="unjarall" unless="build.unjar.dir.present">
    <mkdir dir="${build.unjar.dir}.tmp" />
    <unjar dest="${build.unjar.dir}.tmp">
      <fileset dir="${lib.dir}" includes="**/*.jar"/>
	  <fileset dir="${seqcode-core.lib.dir}" includes="**/*.jar"/>
    </unjar>
    <move file="${build.unjar.dir}.tmp" tofile="${build.unjar.dir}" />
  </target>

  <target name="requirepwset">
    <fail unless="pwset"
	  message="Must set pwset property.  This is a subdir of
		   pwfiles.basepath (${pwfiles.basepath})."/>
  </target>

  <target name="setpwfilespath" depends="init, requirepwset" unless="${pwfiles.path}">
    <property name="pwfiles.path" value="${pwfiles.basepath}/${pwset}"/>
  </target>

  	<!-- ======================================================================= -->
	<!-- Target: makesequnwinderjar                                                  -->
	<!-- Depends: build, unjarall, setpwfilespath                         		 -->
	<!-- Description: Compiles all the client source files and builds the jar    -->
	<!--              for SeqUnwinder. ant -Dpwset=public makesequnwinderjar     -->
	<!-- ======================================================================= -->
  <target name="makesequnwinderjar" depends="build, unjarall, setpwfilespath">
    <delete dir="${build.unjar.dir}/META-INF"/>
    <jar destfile="${build.dist.dir}/sequnwinder.${pwset}.jar" manifest="manifests/sequnwinder_manifest.txt">	    
      <fileset dir="${build.classes.dir}" includes="**/*.class"/>
      <fileset dir="${build.classes.dir}" includes="**/*.properties"/>
      <fileset dir="${build.classes.dir}" includes="**/*.png"/>
      <fileset dir="${build.classes.dir}" includes="**/*.txt"/>
      <fileset dir="${seqcode-core.classes.dir}" includes="**/*.class"/>
      <fileset dir="${seqcode-core.classes.dir}" includes="**/*.properties"/>
      <fileset dir="${seqcode-core.classes.dir}" includes="**/*.png"/>
      <fileset dir="${seqcode-core.classes.dir}" includes="**/*.txt"/>
      <fileset dir="${pwfiles.path}" includes="*"/>
      <fileset dir="${build.unjar.dir}"/>	    
    </jar>  
    <chmod file="${build.dist.dir}/sequnwinder.${pwset}.jar}" perm="755"/>
  </target>

	


</project>
